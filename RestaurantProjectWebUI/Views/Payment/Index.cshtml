@using RestaurantProject.DtoLayer.Payment;
@model PaymentRequestDto

@{
    Layout = null;
}

<!DOCTYPE html>
<html>

@await Component.InvokeAsync("_UILayoutHeadComponentPartial")

<body class="sub_page">

    @await Component.InvokeAsync("_PaymentNavbarComponentPartial") 

    <!-- book section -->
    <section class="book_section layout_padding">


        @using (Html.BeginForm("Payment", "Payment", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            <div class="container">
                <div class="heading_container">
                    <h2>ÖDEME EKRANI</h2>
                </div>

                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.Hidden("MenuTableID", Model.MenuTableID)

                <div class="row">
                    <div class="col-md-8 mb-3">
                        <label>Ödenecek Tutar</label>
                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.Total } })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-8 mb-3">
                        <label>Kart Sahibi</label>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-8 mb-3">
                        <label>Kart Numarası</label>
                        @Html.EditorFor(model => model.CardNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CardNumber, "Kart Numarası alanı zorunludur.", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4 mb-3">
                        <label>Son Kullanma Tarihi (Ay)</label>
                        @Html.EditorFor(model => model.ExairationMonth, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ExairationMonth, "Son Kullanma Tarihi (Ay) alanı zorunludur.", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4 mb-3">
                        <label>Son Kullanma Tarihi (Yıl)</label>
                        @Html.EditorFor(model => model.ExairationYear, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ExairationYear, "Son Kullanma Tarihi (Yıl) alanı zorunludur.", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-8 mb-3">
                        <label>CVC</label>
                        @Html.EditorFor(model => model.CVC, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CVC, "CVC alanı zorunludur.", new { @class = "text-danger" })
                    </div>
                </div>

                <hr class="mb-4" />

                <div class="row">
                    <div class="col-md-8 mb-3">
                        <button type="submit" class="btn btn-success btn-lg btn-block">Ödemeyi Tamamla</button>
                    </div>
                </div>

                @ViewBag.Message
            </div>
        }











    @*     @using (Html.BeginForm("Payment", "Payment", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            <div class="control-group">
                <label class="control-label" for="inputUsername">Toplam Fiyat</label>
                <div class="controls">

                    @Html.AntiForgeryToken()


                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.Total } })

                    @ViewBag.Message;

                </div>
            </div>

            <div class="control-group">
                <label class="control-label" for="inputUsername">İsim</label>
                <div class="controls">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })

                </div>
            </div>

            <div class="control-group">
                <label class="control-label" for="inputUsername">Kart Numarası</label>
                <div class="controls">
                    @Html.EditorFor(model => model.CardNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CardNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="inputUsername">Son Geçerlilik Yılı</label>
                <div class="controls">
                    @Html.EditorFor(model => model.ExairationYear, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExairationYear, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="inputUsername">Son Geçerlilik Ayı</label>
                <div class="controls">
                    @Html.EditorFor(model => model.ExairationMonth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExairationMonth, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="inputUsername">CVC</label>
                <div class="controls">
                    @Html.EditorFor(model => model.CVC, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CVC, "", new { @class = "text-danger" })
                </div>
            </div>



            @Html.Hidden("MenuTableID",Model.MenuTableID);
            <div class="control-group">
                <div class="controls">
                    <button type="submit" class="btn btn-success">Ödemeyi Tamamla</button>
                </div>
            </div>

        } *@



        @* <div class="container">
            <div class="heading_container">
                <h2>
                    ÖDEME EKRANI
                </h2>
            </div>
            @Html.Hidden("MenuTableID",Model.MenuTableID);
            <div class="row">
                <div class="col-md-8 mb-3">
                    <label>Ödenecek Tutar</label>
                    <input type="text" class="form-control" placeholder="Ödenecek Tutar" value="@Model.Amount" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-8 mb-3">
                    <label>Kart Sahibi</label>
                    <input type="text" class="form-control" placeholder="Ad Soyad" value="" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-8 mb-3">
                    <label>Kart Numarası</label>
                    <input type="text" id="card-input" class="form-control" placeholder="Kart Numarası" value="" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-4 mb-3">
                    <label>Son Kullanma Tarihi (Ay)</label>
                    <input type="text" class="form-control" placeholder="Ay" value="" />
                </div>
                <div class="col-md-4 mb-3">
                    <label>Son Kullanma Tarihi (Yıl)</label>
                    <input type="text" class="form-control" placeholder="Yıl" value="" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-8 mb-3">
                    <label>CVC</label>
                    <input type="text" id="cvc-input" class="form-control" placeholder="CVC" value="" />
                </div>
            </div>
            <hr class="mb-4" />

            <div class="row">
                <div class="col-md-8 mb-3">
                    <button type="submit" class="btn btn-success btn-lg btn-block">Ödemeyi Tamamla</button>

                </div>
            </div>








        </div> *@
    </section>
    <!-- end book section -->
    <!-- footer section -->
    @await Component.InvokeAsync("_UILayoutFooterComponentPartial")
    <!-- footer section -->
    <!-- jQery -->
    @await Component.InvokeAsync("_UILayoutScriptComponentPartial")





    @* 3 haneli giriş script kodu *@
    <script>
        document.getElementById('cvc-input').addEventListener('input', function (e) {
            let value = e.target.value;
            // Sadece rakamları kontrol eder ve uzunluğu sınırlar
            e.target.value = value.replace(/\D/g, '').slice(0, 3);
        });
    </script>
    @* 16 haneli giriş script kodu *@
    <script>
        document.getElementById('card-input').addEventListener('input', function (e) {
            let value = e.target.value.replace(/\D/g, ''); // Sadece rakamları tut
            value = value.slice(0, 16); // En fazla 16 rakam tut

            // Her 4 haneden sonra bir boşluk ekle
            let formattedValue = '';
            for (let i = 0; i < value.length; i += 4) {
                if (i > 0) {
                    formattedValue += ' ';
                }
                formattedValue += value.slice(i, i + 4);
            }

            e.target.value = formattedValue;
        });
    </script>
</body>

</html>
